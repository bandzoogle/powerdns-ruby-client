=begin
#PowerDNS Authoritative HTTP API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 0.0.13

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for PowerDNS::ZonecryptokeyApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ZonecryptokeyApi' do
  before do
    # run before each test
    @instance = PowerDNS::ZonecryptokeyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ZonecryptokeyApi' do
    it 'should create an instance of ZonecryptokeyApi' do
      expect(@instance).to be_instance_of(PowerDNS::ZonecryptokeyApi)
    end
  end

  # unit tests for create_cryptokey
  # Creates a Cryptokey
  # This method adds a new key to a zone. The key can either be generated or imported by supplying the content parameter. if content, bits and algo are null, a key will be generated based on the default-ksk-algorithm and default-ksk-size settings for a KSK and the default-zsk-algorithm and default-zsk-size options for a ZSK.
  # @param server_id The id of the server to retrieve
  # @param zone_id 
  # @param cryptokey Add a Cryptokey
  # @param [Hash] opts the optional parameters
  # @return [Cryptokey]
  describe 'create_cryptokey test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cryptokey
  # This method deletes a key specified by cryptokey_id.
  # @param server_id The id of the server to retrieve
  # @param zone_id The id of the zone to retrieve
  # @param cryptokey_id The id value of the Cryptokey
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_cryptokey test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_cryptokey
  # Returns all data about the CryptoKey, including the privatekey.
  # @param server_id The id of the server to retrieve
  # @param zone_id The id of the zone to retrieve
  # @param cryptokey_id The id value of the CryptoKey
  # @param [Hash] opts the optional parameters
  # @return [Cryptokey]
  describe 'get_cryptokey test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_cryptokeys
  # Get all CryptoKeys for a zone, except the privatekey
  # @param server_id The id of the server to retrieve
  # @param zone_id The id of the zone to retrieve
  # @param [Hash] opts the optional parameters
  # @return [Array<Cryptokey>]
  describe 'list_cryptokeys test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for modify_cryptokey
  # This method (de)activates a key from zone_name specified by cryptokey_id
  # @param server_id The id of the server to retrieve
  # @param zone_id 
  # @param cryptokey_id Cryptokey to manipulate
  # @param cryptokey the Cryptokey
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'modify_cryptokey test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
